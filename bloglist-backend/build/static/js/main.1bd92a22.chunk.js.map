{"version":3,"sources":["components/Togglable.js","services/blogs.js","services/login.js","reducers/blogsReducer.js","reducers/loginReducer.js","reducers/userReducer.js","components/AddBlogForm.js","reducers/messageReducer.js","components/LoginForm.js","components/Home.js","services/users.js","reducers/usersReducer.js","components/UsersView.js","components/Notification.js","components/SingleUserView.js","components/Blog.js","components/LoggedinMessage.js","App.js","store.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","Button","onClick","id","buttonLabel","children","displayName","baseUrl","token","create","newObject","a","config","headers","Authorization","axios","post","response","data","addComment","comment","commObj","getAll","get","then","setToken","newToken","remove","delete","update","put","login","credentials","initializeBlogs","dispatch","blogService","blogs","type","updateBlog","blog","blogsReducer","state","action","blogToChange","find","b","changedBlog","likes","map","initialState","username","password","setCredentials","loginReducer","setUser","user","userReducer","AddBlogForm","createBlog","title","setTitle","author","setAuthor","url","setUrl","imageURL","setImageURL","text","setText","onSubmit","event","preventDefault","Form","Group","Label","Control","value","name","onChange","target","variant","setMessage","message","messageReducer","LoginForm","handleLogin","useDispatch","Home","useEffect","useSelector","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","console","log","setTimeout","addBlog","blogObject","newBlog","blogFormRef","useRef","sortedByLikes","sort","className","Table","striped","key","to","src","comments","length","incrementLikes","initializeUsers","userService","users","UsersView","Notification","SingleUserView","useParams","userToDisplay","u","String","Blog","setComment","href","c","index","confirm","deleteBlog","background","LoggedinMessage","size","clear","App","padding","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","as","Item","path","reducer","combineReducers","usersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"yQAIMA,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EACnBC,oBAAS,GADU,mBAC1CC,EAD0C,KACjCC,EADiC,KAG3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IAWd,OARAM,8BAAoBR,GAAK,WACvB,MAAO,CACLO,uBAOF,6BACE,yBAAKE,MAAOL,GACV,kBAACM,EAAA,EAAD,CAAQC,QAASJ,EAAkBK,GAAG,sBAAsBb,EAAMc,cAEpE,yBAAKJ,MAAOH,GACTP,EAAMe,SACP,kBAACJ,EAAA,EAAD,CAAQC,QAASJ,EAAkBK,GAAG,wBAAtC,eAMRhB,EAAUmB,YAAc,YAQTnB,Q,iBC1CToB,EAAU,aAEZC,EAAQ,KAWNC,EAAM,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeN,IAFf,SAKUO,IAAMC,KAAKT,EAASG,EAAWE,GALzC,cAKPK,EALO,yBAMNA,EAASC,MANH,2CAAH,sDASNC,EAAU,uCAAG,WAAOC,EAASjB,GAAhB,iBAAAQ,EAAA,6DAEXU,EAAU,CAAE,QAAWD,GAFZ,SAIML,IAAMC,KAAN,UAAcT,EAAd,YAAyBJ,EAAzB,aAAwCkB,GAJ9C,cAIXJ,EAJW,yBAKVA,EAASC,MALC,2CAAH,wDAsBD,GAAEI,OApCF,WAEb,OADgBP,IAAMQ,IAAIhB,GACXiB,MAAK,SAAAP,GAAQ,OAAIA,EAASC,SAkClBT,SAAQgB,SAxChB,SAAAC,GACflB,EAAK,iBAAakB,IAuCuBC,OAd5B,SAACxB,GAEd,IAAMS,EAAS,CACbC,QAAS,CAAEC,cAAeN,IAG5B,OADgBO,IAAMa,OAAN,UAAgBrB,EAAhB,YAA2BJ,GAAMS,GAClCY,MAAK,SAAAP,GAAQ,OAAIA,EAASC,SAQQW,OALvC,uCAAG,WAAOnB,EAAWP,GAAlB,eAAAQ,EAAA,sEACUI,IAAMe,IAAN,UAAavB,EAAb,YAAwBJ,GAAMO,GADxC,cACPO,EADO,yBAENA,EAASC,MAFH,2CAAH,wDAK+CC,cCrC5C,GAAEY,MALN,uCAAG,WAAMC,GAAN,eAAArB,EAAA,sEACaI,IAAMC,KAHjB,aAG+BgB,GADjC,cACJf,EADI,yBAEHA,EAASC,MAFN,2CAAH,uD,uBCuBEe,EAAkB,WAC7B,8CAAO,WAAMC,GAAN,eAAAvB,EAAA,sEACewB,EAAYb,SAD3B,OACCc,EADD,OAELF,EAAS,CACPG,KAAM,aACNnB,KAAMkB,IAJH,2CAAP,mDAAM,IA8BKE,EAAa,SAAC5B,EAAWP,GACpC,8CAAO,WAAM+B,GAAN,eAAAvB,EAAA,sEACcwB,EAAYN,OAAOnB,EAAWP,GAD5C,OACCoC,EADD,OAELL,EAAS,CACPG,KAAM,cACNnB,KAAMqB,IAJH,2CAAP,mDAAM,IASOC,EAjEM,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOL,MACb,IAAK,aACH,OAAOK,EAAOxB,KAChB,IAAK,WACH,MAAM,GAAN,mBAAWuB,GAAX,CAAkBC,EAAOxB,OAC3B,IAAK,cACH,IAAMf,EAAKuC,EAAOxB,KAAKf,GACjBwC,EAAeF,EAAMG,MAAK,SAAAC,GAAC,OAAIA,EAAE1C,KAAOA,KACxC2C,EAAW,eACZH,EADY,CAEfI,MAAOJ,EAAaI,MAAQ,IAE9B,OAAON,EAAMO,KAAI,SAAAT,GAAI,OACnBA,EAAKpC,KAAOA,EAAKoC,EAAOO,KAG5B,IAAK,cACH,OAAOJ,EAAOxB,KAChB,QACE,OAAOuB,ICtBPQ,EAAe,CACjBC,SAAU,GACVC,SAAU,IAYDC,EAAiB,SAACF,EAAUC,GACrC,MAAO,CACHd,KAAM,kBACNnB,KAAM,CACFgC,SAAUA,EACVC,SAAUA,KAKPE,EAnBM,WAAmC,IAAlCZ,EAAiC,uDAAzBQ,EAAcP,EAAW,uCACnD,OAAQA,EAAOL,MACX,IAAK,kBACD,OAAOK,EAAOxB,KAClB,QACI,OAAOuB,ICDNa,EAAU,SAAAC,GACnB,MAAO,CACHlB,KAAM,WACNkB,SAIOC,EAhBK,WAA2B,IAA1Bf,EAAyB,uDAAjB,KAAMC,EAAW,uCAC1C,OAAQA,EAAOL,MACX,IAAK,WACD,OAAOK,EAAOa,KAClB,QACI,OAAOd,I,QCwEJgB,EA1EK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAEZlE,mBAAS,IAFG,mBAE/BmE,EAF+B,KAExBC,EAFwB,OAGVpE,mBAAS,IAHC,mBAG/BqE,EAH+B,KAGvBC,EAHuB,OAIhBtE,mBAAS,IAJO,mBAI/BuE,EAJ+B,KAI1BC,EAJ0B,OAKNxE,mBAAS,IALH,mBAK/ByE,EAL+B,KAKrBC,EALqB,OAMb1E,mBAAS,IANI,mBAM/B2E,EAN+B,KAMzBC,EANyB,KA0BtC,OAEE,6BACE,sDAEA,0BAAMC,SAvBM,SAACC,GACfA,EAAMC,iBASNb,EAPmB,CACjBC,MAAOA,EACPE,OAAQA,EACRE,IAAKA,EACLE,SAAUA,IAIZL,EAAS,IACTE,EAAU,IACVE,EAAO,IACPE,EAAY,IACZE,EAAQ,MASJ,kBAACI,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,eACA,kBAACF,EAAA,EAAKG,QAAN,CACExE,GAAG,QACHkC,KAAK,OACLuC,MAAOjB,EACPkB,KAAK,QACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBnB,EAASmB,EAAOH,UAE5C,kBAACJ,EAAA,EAAKE,MAAN,gBACA,kBAACF,EAAA,EAAKG,QAAN,CACExE,GAAG,SACHkC,KAAK,OACLuC,MAAOf,EACPgB,KAAK,SACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBjB,EAAUiB,EAAOH,UAE7C,kBAACJ,EAAA,EAAKE,MAAN,mBACA,kBAACF,EAAA,EAAKG,QAAN,CACExE,GAAG,OACHkC,KAAK,OACLuC,MAAOT,EACPU,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBX,EAAQW,EAAOH,UAE3C,kBAACJ,EAAA,EAAKE,MAAN,wBACA,kBAACF,EAAA,EAAKG,QAAN,CACExE,GAAG,WACHkC,KAAK,OACLuC,MAAOX,EACPY,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBb,EAAYa,EAAOH,UAE/C,kBAAC3E,EAAA,EAAD,CAAQ+E,QAAQ,UAAU3C,KAAK,SAASlC,GAAG,iBAA3C,cClDG8E,EAAa,SAAAC,GACtB,MAAO,CACH7C,KAAM,cACN6C,YAIOC,EAzBQ,WAA2B,IAA1B1C,EAAyB,uDAAjB,KAAMC,EAAW,uCAC7C,OAAQA,EAAOL,MACX,IAAK,cAEL,IAAK,gBACD,OAAOK,EAAOwC,QAClB,QACI,OAAOzC,IC+BJ2C,EAhCG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,YAAanC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAEpCjB,EAAWoD,cAEjB,OACE,0BAAMjB,SAAUgB,GACd,kBAACb,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,kBACA,kBAACF,EAAA,EAAKG,QAAN,CACExE,GAAG,gBACHkC,KAAK,OACLuC,MAAO1B,EACP2B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB7C,EAASkB,EAAe2B,EAAOH,MAAOzB,OAElE,kBAACqB,EAAA,EAAKE,MAAN,kBACA,kBAACF,EAAA,EAAKG,QAAN,CACExE,GAAG,gBACHkC,KAAK,WACLuC,MAAOzB,EACP0B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB7C,EAASkB,EAAeF,EAAU6B,EAAOH,WAErE,kBAAC3E,EAAA,EAAD,CAAQ+E,QAAQ,UAAU3C,KAAK,SAASlC,GAAG,eAA3C,Y,gBCyHOoF,EAnIF,WAEX,IAAMrD,EAAWoD,cAEjBE,qBAAU,WACRtD,EAASD,OACR,CAACC,IAEJ,IAAME,EAAQqD,aAAY,SAAAhD,GAAK,OAAIA,EAAML,SACnCJ,EAAcyD,aAAY,SAAAhD,GAAK,OAAIA,EAAMT,eACzCuB,EAAOkC,aAAY,SAAAhD,GAAK,OAAIA,EAAMc,QAGxCiC,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMnC,EAAOuC,KAAKC,MAAML,GACxBxD,EAASoB,EAAQC,IACjBpB,EAAYV,SAAS8B,EAAK/C,UAE3B,CAAC0B,IAEJ,IAAMmD,EAAW,uCAAG,WAAOf,GAAP,mBAAA3D,EAAA,6DAClB2D,EAAMC,iBADY,SAGVrB,EAAWlB,EAAYkB,SACvBC,EAAWnB,EAAYmB,SAJb,SAMG6C,EAAajE,MAAM,CACpCmB,WAAUC,aAPI,OAMVI,EANU,OAUhBoC,OAAOC,aAAaK,QAClB,oBAAqBH,KAAKI,UAAU3C,IAGtCpB,EAAYV,SAAS8B,EAAK/C,OAC1B2F,QAAQC,IAAI,SAAU7C,GACtB4C,QAAQC,IAAI,UAAW7C,EAAK/C,OAE5B0B,EAASoB,EAAQC,IACjBrB,EAASkB,EAAe,GAAI,KAE5BlB,EAAS+C,EAAW,0BACpBoB,YAAW,WACTnE,EFpDG,CACHG,KAAM,gBACN6C,QAAS,SEmDR,KAxBa,kDA0BhBiB,QAAQC,IAAI,qBACZlE,EAAS+C,EAAW,sBACpBoB,YAAW,WACTnE,EF1DG,CACHG,KAAM,gBACN6C,QAAS,SEyDR,KA9Ba,0DAAH,sDAkCXoB,EAAU,SAACC,GNvCO,IAAA7F,EMwCtBwB,GNxCsBxB,EMwCF6F,ENvCtB,uCAAO,WAAMrE,GAAN,eAAAvB,EAAA,sEACiBwB,EAAY1B,OAAOC,GADpC,OACC8F,EADD,OAELtE,EAAS,CACPG,KAAM,WACNnB,KAAMsF,IAJH,2CAAP,mDAAM,KMwCJtE,EAAS+C,EAAW,mCACpBoB,YAAW,WACTnE,EFnEK,CACHG,KAAM,gBACN6C,QAAS,SEkEV,MAmBCuB,EAAcC,mBAUdC,EAAgBvE,EAAMwE,MAAK,SAACjG,EAAGkC,GAAJ,OAAWlC,EAAEoC,MAAQF,EAAEE,OAAU,EAAI,KAEtE,OACE,6BACY,OAATQ,EACC,kBAAC,EAAD,CACE8B,YAAaA,EACbnC,SAAUlB,EAAYkB,SACtBC,SAAUnB,EAAYmB,WAExB,6BACE,wBAAI0D,UAAW,cAAf,cAlBN,kBAAC,EAAD,CAAWzG,YAAY,WAAWb,IAAKkH,GACrC,kBAAC,EAAD,CACE/C,WAAY4C,KAkBV,kBAACQ,EAAA,EAAD,CAAOC,SAAO,GACZ,+BACGJ,EAAc3D,KAAI,SAAAT,GAAI,OACrB,wBAAIyE,IAAKzE,EAAKpC,IACZ,wBAAI0G,UAAW,kBACb,6BACE,kBAAC,IAAD,CAAMA,UAAW,iBAAkBI,GAAE,iBAAY1E,EAAKpC,KACnDoC,EAAKoB,OACD,6BAAM,6BACZpB,EAAK0B,SAAW,yBAAK4C,UAAW,gBAAiBK,IAAK3E,EAAK0B,WAAe,KAAK,6BAC/E1B,EAAKQ,MAAQ,UALhB,IAK4BR,EAAK4E,SAASC,OAL1C,IAK4E,IAAzB7E,EAAK4E,SAASC,OAAe,WAAa,WAL7F,gBAKsH7E,EAAKsB,OAL3H,KAMI,kBAAC5D,EAAA,EAAD,CAAQC,QAAS,kBAjDhB,SAACqC,GAEtB,IAAMgE,EAAa,CACjBhD,KAAMhB,EAAKgB,KAAKpD,GAChB4C,MAAOR,EAAKQ,MAAQ,EACpBc,OAAQtB,EAAKsB,OACbF,MAAOpB,EAAKoB,MACZI,IAAKxB,EAAKwB,KAGZoC,QAAQC,IAAI,gBAAiBG,GAE7BrE,EAASI,EAAWiE,EAAYhE,EAAKpC,KAqCMkH,CAAe9E,KAAtC,mBC7HT,EALA,WAEX,OADgBxB,IAAMQ,IAHV,cAIGC,MAAK,SAAAP,GAAQ,OAAIA,EAASC,SCShCoG,EAAkB,WAC7B,8CAAO,WAAMpF,GAAN,eAAAvB,EAAA,sEACe4G,IADf,OACCC,EADD,OAELtF,EAAS,CACPG,KAAM,aACNnB,KAAMsG,IAJH,2CAAP,mDAAM,IAkBOrC,EA9BQ,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIC,EAAW,uCAC7C,OAAQA,EAAOL,MACb,IAAK,aAEH,IAAK,YACH,OAAOK,EAAOxB,KAClB,QACE,OAAOuB,IC2DEgF,EA1DG,WAEhB,IAAMvF,EAAWoD,cAEX/B,EAAOkC,aAAY,SAAAhD,GAAK,OAAIA,EAAMc,QAClCiE,EAAQ/B,aAAY,SAAAhD,GAAK,OAAIA,EAAM+E,SAkBzC,OAhBAhC,qBAAU,WACRtD,EAASoF,OACR,CAACpF,IAIJsD,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMnC,EAAOuC,KAAKC,MAAML,GACxBxD,EAASoB,EAAQC,IACjBpB,EAAYV,SAAS8B,EAAK/C,OAE5B2F,QAAQC,IAAI,UACX,CAAClE,IAGF,6BACY,OAATqB,EACC,sEACA,6BACE,qCACA,kBAACuD,EAAA,EAAD,CAAOC,SAAO,GACZ,+BACE,4BACE,yCACA,+CAGJ,+BACGS,EAAMxE,KAAI,SAAAO,GAAI,OACb,wBAAIyD,IAAKzD,EAAKpD,IACZ,4BACE,kBAAC,IAAD,CAAM8G,GAAE,iBAAY1D,EAAKpD,KACtBoD,EAAKsB,OAGV,4BAAKtB,EAAKnB,MAAMgF,iBCtCnBM,EAdM,WACnB,IAAMxC,EAAUO,aAAY,SAAAhD,GAAK,OAAIA,EAAMyC,WAE3C,OAAgB,OAAZA,EACK,KAIP,yBAAK2B,UAAU,SACZ3B,I,OC2DQyC,EA7DQ,WAErB,IAAMzF,EAAWoD,cAEX/B,EAAOkC,aAAY,SAAAhD,GAAK,OAAIA,EAAMc,QAClCiE,EAAQ/B,aAAY,SAAAhD,GAAK,OAAIA,EAAM+E,SAGzChC,qBAAU,WACRtD,EAASoF,OACR,CAACpF,IAGJsD,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMnC,EAAOuC,KAAKC,MAAML,GACxBxD,EAASoB,EAAQC,IACjBpB,EAAYV,SAAS8B,EAAK/C,UAE3B,CAAC0B,IAEJ,IAAM/B,EAAKyH,cAAYzH,GAOjB0H,EAAgBL,EAAM5E,MAAK,SAAAkF,GAAC,OAAIC,OAAOD,EAAE3H,MAAQ4H,OAAO5H,MAG9D,OACE,6BACY,OAAToD,EACC,sEACA,6BACGsE,EACC,6BACE,4BAAKA,EAAchD,MACnB,2CACA,4BACGgD,EAAczF,MAAMY,KAAI,SAAAH,GAAC,OACxB,wBAAImE,IAAKnE,EAAE1C,IAAK0C,EAAEc,YAIxB,8EC8EGqE,EA9HF,WAAO,IAAD,EAEaxI,mBAAS,IAFtB,mBAEV4B,EAFU,KAED6G,EAFC,KAKX/F,EAAWoD,cAEjBE,qBAAU,WACRtD,EAASD,OACR,CAACC,IAIJ,IAAME,EAAQqD,aAAY,SAAAhD,GAAK,OAAIA,EAAML,SACnCjC,EAAKyH,cAAYzH,GACjBoC,EAAOH,EAAMQ,MAAK,SAAAC,GAAC,OAAIkF,OAAOlF,EAAE1C,MAAQ4H,OAAO5H,MAC/CoD,EAAOkC,aAAY,SAAAhD,GAAK,OAAIA,EAAMc,QAMxCiC,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMnC,EAAOuC,KAAKC,MAAML,GACxBxD,EAASoB,EAAQC,IACjBpB,EAAYV,SAAS8B,EAAK/C,UAE3B,CAAC0B,IAsCJ,OACE,6BACY,OAATqB,EACC,sEACA,6BACGhB,EACC,6BACE,wBAAIpC,GAAG,mBAAmBoC,EAAKoB,OAC9BpB,EAAK0B,SAAW,yBAAK4C,UAAW,kBAAmBK,IAAK3E,EAAK0B,WAAe,KAC7E,kBAAC6C,EAAA,EAAD,KACE,+BACE,4BACE,oCACO,uBAAGoB,KAAM3F,EAAKwB,KAChBxB,EAAKwB,OAIZ,4BACE,gCAAMxB,EAAKQ,MAAX,UAAwB,kBAAC9C,EAAA,EAAD,CAAQC,QArD3B,WAErB,IAAMqG,EAAa,CACjBhD,KAAMhB,EAAKgB,KAAKpD,GAChB4C,MAAOR,EAAKQ,MAAQ,EACpBc,OAAQtB,EAAKsB,OACbF,MAAOpB,EAAKoB,MACZI,IAAKxB,EAAKwB,KAGZoC,QAAQC,IAAI,gBAAiBG,GAE7BrE,EAASI,EAAWiE,EAAYhE,EAAKpC,OAyCG,QAA8C,+BAExE,4BACE,wCACYoC,EAAKsB,WAKvB,0BAAMQ,SAjCC,WACjBlC,EAAYhB,WAAWC,EAASmB,EAAKpC,MAiCzB,kBAACqE,EAAA,EAAKC,MAAN,KACE,uCACA,kBAACD,EAAA,EAAKG,QAAN,CACExE,GAAG,QACHkC,KAAK,OACLuC,MAAOxD,EACPyD,KAAK,QACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkD,EAAWlD,EAAOH,UAE9C,kBAAC3E,EAAA,EAAD,CAAQ+E,QAAQ,UAAU3C,KAAK,SAASlC,GAAG,oBAA3C,iBAKJ,yCACA,4BACGoC,EAAK4E,SAASnE,KAAI,SAACmF,EAAGC,GAAJ,OAAc,wBAAIpB,IAAKoB,GAASD,OAElD5F,EAAKgB,MAAQA,IAAWhB,EAAKgB,KAAKpD,KAAOoD,EAAKpD,IAAQoC,EAAKgB,OAASA,EAAKpD,IAAQ,kBAACF,EAAA,EAAD,CAAQC,QAlErF,WAEFyF,OAAO0C,QAAP,0BAAkC9F,EAAKoB,MAAvC,QAGbzB,EZhBoB,SAAC/B,GACzB,8CAAO,WAAM+B,GAAN,eAAAvB,EAAA,sEACCwB,EAAYR,OAAOxB,GADpB,uBAEegC,EAAYb,SAF3B,OAECc,EAFD,OAGLF,EAAS,CACPG,KAAM,cACNnB,KAAMkB,IALH,2CAAP,mDAAM,GYeOkG,CAAW/F,EAAKpC,KACzB+B,EAAS+C,EAAW,iCACpBoB,YAAW,WACTnE,ERrDG,CACHG,KAAM,gBACN6C,QAAS,SQoDR,OAyDsHlF,MAAO,CAAEuI,WAAY,QAAlD,UAA6E,MAEnK,8E,gBChGGC,EArBS,WACtB,IAAMtG,EAAWoD,cAEX/B,EAAOkC,aAAY,SAAAhD,GAAK,OAAIA,EAAMc,QAYxC,OACE,yBAAKsD,UAAU,WAAW1G,GAAG,gBAAgBoD,EAAKsB,KAAlD,cAAkE,kBAAC5E,EAAA,EAAD,CAAQ+E,QAAQ,kBAAkByD,KAAK,KAAKvI,QAVjG,WACbyF,OAAOC,aAAa8C,QACpBxG,EAASoB,EAAQ,OACjBpB,EAAS+C,EAAW,2BACpBoB,YAAW,WACTnE,ETPK,CACHG,KAAM,gBACN6C,QAAS,SSMV,MAI4H/E,GAAG,gBAAhE,aCuDvDwI,EA9DH,WAEV,IAAMzG,EAAWoD,cAEX/B,EAAOkC,aAAY,SAAAhD,GAAK,OAAIA,EAAMc,QAExCiC,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMnC,EAAOuC,KAAKC,MAAML,GACxBxD,EAASoB,EAAQC,IACjBpB,EAAYV,SAAS8B,EAAK/C,UAE3B,CAAC0B,IAEJ,IAAM0G,EAAU,CACdA,QAAS,GAGX,OACE,kBAAC,IAAD,KACE,yBAAK/B,UAAU,aAEb,kBAACgC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOhE,QAAQ,QACrD,kBAAC6D,EAAA,EAAOI,OAAR,CAAeC,gBAAc,0BAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBhJ,GAAG,yBAClB,kBAACiJ,EAAA,EAAD,CAAKvC,UAAU,WACb,kBAACuC,EAAA,EAAIC,KAAL,CAAUnB,KAAK,IAAIoB,GAAG,QACpB,kBAAC,IAAD,CAAMtJ,MAAO4I,EAAS3B,GAAG,KAAzB,SAEF,kBAACmC,EAAA,EAAIC,KAAL,CAAUnB,KAAK,IAAIoB,GAAG,QACpB,kBAAC,IAAD,CAAMtJ,MAAO4I,EAAS3B,GAAG,UAAzB,UAEF,kBAACmC,EAAA,EAAIG,KAAL,CAAUpJ,GAAG,qBACD,OAAToD,EACC,KACA,kBAAC,EAAD,UAMV,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiG,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,W,kCC5DNC,GAAUC,0BAAgB,CAC9BtH,MAAOI,EACPR,YAAaqB,EACbE,KAAMC,EACN0B,QAASC,EACTqC,MAAOmC,IAUMC,GAPDC,sBACZJ,GACAK,+BACEC,0BAAgBC,QCfpBC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.1bd92a22.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle, useForm } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility} id=\"toggalbeShowButton\">{props.buttonLabel }</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button onClick={toggleVisibility} id=\"toggalbeCancelButton\">cancel</Button> \n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\n\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst addComment = async (comment, id) => {\n\n  const commObj = { 'comment': comment }\n\n  const response = await axios.post(`${baseUrl}/${id}/comments`, commObj, )\n  return response.data\n}\n\nconst remove = (id) => {\n\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst update = async (newObject, id) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nexport default { getAll, create, setToken, remove, update, addComment }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import blogService from '../services/blogs'\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data\n    case 'NEW_BLOG':\n      return [...state, action.data]\n    case 'UPDATE_BLOG': {\n      const id = action.data.id\n      const blogToChange = state.find(b => b.id === id)\n      const changedBlog = {\n        ...blogToChange,\n        likes: blogToChange.likes + 1\n      }\n      return state.map(blog =>\n        blog.id !== id ? blog : changedBlog\n      )\n    }\n    case 'DELETE_BLOG':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport const createBlog = newObject => {\n  return async dispatch => {\n    const newBlog = await blogService.create(newObject)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    await blogService.remove(id)\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: blogs\n    })\n  }\n}\n\nexport const updateBlog = (newObject, id) => {\n  return async dispatch => {\n    const blog = await blogService.update(newObject, id)\n    dispatch({\n      type: 'UPDATE_BLOG',\n      data: blog\n    })\n  }\n}\n\nexport default blogsReducer","const initialState = {\n    username: '',\n    password: ''\n}\n\nconst loginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_CREDENTIALS':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setCredentials = (username, password) => {\n    return {\n        type: 'SET_CREDENTIALS',\n        data: {\n            username: username,\n            password: password\n        }\n    }\n}\n\nexport default loginReducer","const userReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.user\n        default:\n            return state\n    }\n}\n\nexport const setUser = user => {\n    return {\n        type: 'SET_USER',\n        user,\n    }\n}\n\nexport default userReducer","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddBlogForm = ({ createBlog }) => {\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [imageURL, setImageURL] = useState('')\n  const [text, setText ] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url,\n      imageURL: imageURL\n    }\n\n    createBlog(blogObject)\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n    setImageURL('')\n    setText('')\n  }\n\n  return (\n\n    <div>\n      <h2>Create a new blog post</h2>\n\n      <form onSubmit={addBlog}>\n        <Form.Group>\n          <Form.Label>title:</Form.Label>\n          <Form.Control\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n          <Form.Label>author:</Form.Label>\n          <Form.Control\n            id=\"author\"\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n          <Form.Label>Post text:</Form.Label>\n          <Form.Control\n            id=\"text\"\n            type=\"text\"\n            value={text}\n            name=\"Password\"\n            onChange={({ target }) => setText(target.value)}\n          />\n          <Form.Label>Post image URL:</Form.Label>\n          <Form.Control\n            id=\"imageURL\"\n            type=\"text\"\n            value={imageURL}\n            name=\"imageURL\"\n            onChange={({ target }) => setImageURL(target.value)}\n          />\n          <Button variant=\"primary\" type=\"submit\" id=\"submitNewBlog\">\n            submit\n          </Button>\n        </Form.Group>\n      </form>\n    </div>\n  )\n}\n\nexport default AddBlogForm","const messageReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_MESSAGE':\n            return action.message\n        case 'REMOVE_MESAGE':\n            return action.message\n        default:\n            return state\n    }\n}\n\nexport const removeMessage = () => {\n    return {\n        type: 'REMOVE_MESAGE',\n        message: null\n    }\n}\n\nexport const setMessage = message => {\n    return {\n        type: 'SET_MESSAGE',\n        message,\n    }\n}\n\nexport default messageReducer","import React from 'react'\nimport { setCredentials } from '../reducers/loginReducer'\nimport { useDispatch } from 'react-redux'\n\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = ({ handleLogin, username, password }) => {\n\n  const dispatch = useDispatch()\n\n  return (\n    <form onSubmit={handleLogin}>\n      <Form.Group>\n        <Form.Label>username:</Form.Label>\n        <Form.Control\n          id=\"username-form\"\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => dispatch(setCredentials(target.value, password))}\n        />\n        <Form.Label>password:</Form.Label>\n        <Form.Control\n          id=\"password-form\"\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => dispatch(setCredentials(username, target.value))}\n        />\n        <Button variant=\"primary\" type=\"submit\" id=\"loginButton\">\n          login\n        </Button>\n      </Form.Group>\n\n    </form>\n  )\n}\n\nexport default LoginForm","import React, { useEffect, useRef } from 'react'\nimport Togglable from './Togglable'\nimport blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeBlogs, createBlog, updateBlog } from '../reducers/blogsReducer'\nimport { setCredentials } from '../reducers/loginReducer'\nimport { setUser } from '../reducers/userReducer'\nimport AddBlogForm from './AddBlogForm'\nimport { setMessage, removeMessage } from '../reducers/messageReducer'\nimport LoginForm from './LoginForm'\n//import '../index.css'\n\nimport { Table, Form, Button } from 'react-bootstrap'\n\nimport {\n  Link\n} from 'react-router-dom'\n\nconst Home = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const blogs = useSelector(state => state.blogs)\n  const credentials = useSelector(state => state.credentials)\n  const user = useSelector(state => state.user)\n\n  //checking local storage for logged in user info\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n    }\n  }, [dispatch])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const username = credentials.username\n      const password = credentials.password\n\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      console.log('user: ', user)\n      console.log('token :', user.token)\n\n      dispatch(setUser(user))\n      dispatch(setCredentials('', ''))\n\n      dispatch(setMessage('Logged in successfuly'))\n      setTimeout(() => {\n        dispatch(removeMessage())\n      }, 5000)\n    } catch (exception) {\n      console.log('wrong credentials')\n      dispatch(setMessage('Wrong credentials'))\n      setTimeout(() => {\n        dispatch(removeMessage())\n      }, 5000)\n    }\n  }\n\n  const addBlog = (blogObject) => {\n    dispatch(createBlog(blogObject))\n    dispatch(setMessage('Successfuly created a new blog'))\n    setTimeout(() => {\n      dispatch(removeMessage())\n    }, 5000)\n  }\n\n  //DUPLICATE CODE!! REMOVE!!\n  const incrementLikes = (blog) => {\n\n    const blogObject = {\n      user: blog.user.id,\n      likes: blog.likes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }\n\n    console.log('blog object: ', blogObject)\n\n    dispatch(updateBlog(blogObject, blog.id))\n  }\n\n  const blogFormRef = useRef()\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new post' ref={blogFormRef}>\n      <AddBlogForm\n        createBlog={addBlog}\n      />\n    </Togglable>\n  )\n\n  const sortedByLikes = blogs.sort((a, b) => (a.likes > b.likes) ? -1 : 1)\n\n  return (\n    <div>\n      {user === null ?\n        <LoginForm\n          handleLogin={handleLogin}\n          username={credentials.username}\n          password={credentials.password}\n        /> :\n        <div>\n          <h2 className={'homeHeader'}>Blog posts</h2>\n          {blogForm()}\n          <Table striped>\n            <tbody>\n              {sortedByLikes.map(blog =>\n                <tr key={blog.id}>\n                  <td className={'homeBlogTitles'}>\n                    <div>\n                      <Link className={'homeBlogTitles'} to={`/blogs/${blog.id}`}>\n                        {blog.title}\n                      </Link><br /><br />\n                      {blog.imageURL ? <img className={'homeBlogImage'} src={blog.imageURL} /> : null}<br />\n                      {blog.likes + ' likes '} {blog.comments.length} {blog.comments.length === 1 ? ' comment' : 'comments'} - posted by {blog.author}\n                      - <Button onClick={() => incrementLikes(blog)} >like</Button>\n                    </div>\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      }\n    </div>\n\n\n  )\n\n\n}\n\nexport default Home","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nexport default { getAll }","import userService from '../services/users'\n\n\nconst messageReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data\n      case 'SET_USERS':\n        return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users\n    })\n  }\n}\n\nexport const setUsers = (users) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_USERS',\n      data: users\n    })\n  }\n}\n\nexport default messageReducer","import React, { useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport blogService from '../services/blogs'\nimport { setUser } from '../reducers/userReducer'\nimport { initializeUsers } from '../reducers/usersReducer'\n\nimport { Link } from 'react-router-dom'\n\nimport { Table } from 'react-bootstrap'\n\nconst UsersView = () => {\n\n  const dispatch = useDispatch()\n\n  const user = useSelector(state => state.user)\n  const users = useSelector(state => state.users)\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  // !!! THIS IS REPEATED, NOT GOOD\n  //checking local storage for logged in user info\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n    }\n    console.log('test')\n  }, [dispatch])\n\n  return (\n    <div>\n      {user === null ?\n        <div>pelase log in to see user information</div> :\n        <div>\n          <h2>Users</h2>\n          <Table striped>\n            <thead>\n              <tr>\n                <th>user name</th>\n                <th>blogs created</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map(user =>\n                <tr key={user.id}>\n                  <td>\n                    <Link to={`/users/${user.id}`}>\n                      {user.name}\n                    </Link>\n                  </td>\n                  <td>{user.blogs.length}</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n\n\n        </div>\n      }\n\n    </div>\n  )\n}\n\nexport default UsersView","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n  const message = useSelector(state => state.message)\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useEffect } from 'react'\n\nimport { useParams } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser } from '../reducers/userReducer'\nimport blogService from '../services/blogs'\nimport { initializeUsers } from '../reducers/usersReducer'\n\n\nconst SingleUserView = () => {\n\n  const dispatch = useDispatch()\n\n  const user = useSelector(state => state.user)\n  const users = useSelector(state => state.users)\n\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n    }\n  }, [dispatch])\n\n  const id = useParams().id\n\n  /*console.log('id: ', id)\n  console.log('type of id: ', typeof(Number(id)))\n  console.log('users: ', users)\n  console.log('ids: ', users.map(u => u.id))*/\n\n  const userToDisplay = users.find(u => String(u.id) === String(id))\n  //console.log('u to isplay: ', userToDisplay)\n\n  return (\n    <div>\n      {user === null ?\n        <div>pelase log in to see user information</div> :\n        <div>\n          {userToDisplay ?\n            <div>\n              <h2>{userToDisplay.name}</h2>\n              <h3>added blogs</h3>\n              <ul>\n                {userToDisplay.blogs.map(b =>\n                  <li key={b.id}>{b.title}</li>\n                )}\n              </ul>\n            </div> :\n            <h3>No user with such id exists int he database</h3>\n\n\n          }\n\n        </div>\n      }\n\n    </div>\n  )\n\n\n}\n\nexport default SingleUserView\n\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initializeBlogs, updateBlog, deleteBlog } from '../reducers/blogsReducer'\r\nimport { useParams } from 'react-router-dom'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport blogService from '../services/blogs'\r\nimport { setMessage, removeMessage } from '../reducers/messageReducer'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\n\r\nconst Blog = () => {\r\n\r\n  const [comment, setComment] = useState('')\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n  }, [dispatch])\r\n\r\n\r\n  //const [visible, setVisible] = useState(false)\r\n  const blogs = useSelector(state => state.blogs)\r\n  const id = useParams().id\r\n  const blog = blogs.find(b => String(b.id) === String(id))\r\n  const user = useSelector(state => state.user)\r\n\r\n  //console.log('blogs: ', blogs)\r\n  //console.log('blog: ', blog)\r\n\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(setUser(user))\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [dispatch])\r\n\r\n\r\n  \r\n  const incrementLikes = () => {\r\n\r\n    const blogObject = {\r\n      user: blog.user.id,\r\n      likes: blog.likes + 1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url\r\n    }\r\n\r\n    console.log('blog object: ', blogObject)\r\n\r\n    dispatch(updateBlog(blogObject, blog.id))\r\n  }\r\n\r\n  const removeBlog = () => {\r\n\r\n    const prompt = window.confirm(`Delete the blog ${blog.title}?`)\r\n\r\n    if (prompt) {\r\n      dispatch(deleteBlog(blog.id))\r\n      dispatch(setMessage('Successfuly removed the blog'))\r\n      setTimeout(() => {\r\n        dispatch(removeMessage())\r\n      }, 5000)\r\n    }\r\n\r\n  }\r\n\r\n  const addComment = () => {\r\n    blogService.addComment(comment, blog.id)\r\n    //dispatch(initializeBlogs())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user === null ?\r\n        <div>pelase log in to see user information</div> :\r\n        <div>\r\n          {blog ?\r\n            <div>\r\n              <h1 id=\"singleBlogTitle\">{blog.title}</h1>\r\n              {blog.imageURL ? <img className={'singleBlogImage'} src={blog.imageURL} /> : null}\r\n              <Table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      url: <a href={blog.url}>\r\n                        {blog.url}\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td> {blog.likes} likes <Button onClick={incrementLikes}>like</Button><br /></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      added by {blog.author}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n              <form onSubmit={addComment}>\r\n                <Form.Group>\r\n                  <h4>comment</h4>\r\n                  <Form.Control\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    value={comment}\r\n                    name=\"Title\"\r\n                    onChange={({ target }) => setComment(target.value)}\r\n                  />\r\n                  <Button variant=\"primary\" type=\"submit\" id=\"addCommentButton\">\r\n                    Add comment\r\n                  </Button>\r\n                </Form.Group>\r\n              </form>\r\n              <h3>comments:</h3>\r\n              <ul>\r\n                {blog.comments.map((c, index) => <li key={index} >{c}</li>)}\r\n              </ul>\r\n              {((blog.user && user) && ((blog.user.id === user.id) || (blog.user === user.id))) ? <Button onClick={removeBlog} style={{ background: 'red' }}>delete</Button> : null}\r\n            </div> :\r\n            <h3>No post with such id exists int he database</h3>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Blog\r\n","import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser } from '../reducers/userReducer'\nimport { setMessage, removeMessage } from '../reducers/messageReducer'\nimport { Button } from 'react-bootstrap'\n\n\nconst LoggedinMessage = () => {\n  const dispatch = useDispatch()\n\n  const user = useSelector(state => state.user)\n\n\n  const logOut = () => {\n    window.localStorage.clear()\n    dispatch(setUser(null))\n    dispatch(setMessage('Logged out successfuly'))\n    setTimeout(() => {\n      dispatch(removeMessage())\n    }, 5000)\n  }\n\n  return (\n    <div className=\"menuItem\" id=\"loggedInText\">{user.name} logged-in <Button variant=\"outline-primary\" size=\"sm\" onClick={logOut} id=\"logOutButton\">log out</Button></div>\n  )\n\n}\n\nexport default LoggedinMessage","import React, { useEffect } from 'react'\nimport Home from './components/Home'\nimport UsersView from './components/UsersView'\nimport Notification from './components/Notification'\nimport SingleUserView from './components/SingleUserView'\nimport Blog from './components/Blog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser } from './reducers/userReducer'\nimport blogService from './services/blogs'\nimport { Navbar, Nav } from 'react-bootstrap'\n\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from 'react-router-dom'\nimport LoggedinMessage from './components/LoggedinMessage'\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n\n  const user = useSelector(state => state.user)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n    }\n  }, [dispatch])\n\n  const padding = {\n    padding: 5\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link style={padding} to=\"/\">home</Link>\n              </Nav.Link>\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link style={padding} to=\"/users\">users</Link>\n              </Nav.Link>\n              <Nav.Item id='loggedInIndicator'>\n                {user === null ?\n                  null :\n                  <LoggedinMessage />\n                }\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Notification />\n        <Switch>\n          <Route path='/users/:id'>\n            <SingleUserView />\n          </Route>\n          <Route path='/users'>\n            <UsersView />\n          </Route>\n          <Route path='/blogs/:id'>\n            <Blog />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport blogsReducer from './reducers/blogsReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/userReducer'\nimport messageReducer from './reducers/messageReducer'\nimport usersReducer from './reducers/usersReducer'\n\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  credentials: loginReducer,\n  user: userReducer,\n  message: messageReducer,\n  users: usersReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider >,\n  document.getElementById('root')\n)"],"sourceRoot":""}