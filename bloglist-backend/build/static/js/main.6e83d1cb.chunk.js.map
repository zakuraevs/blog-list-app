{"version":3,"sources":["components/Togglable.js","services/blogs.js","services/login.js","reducers/blogsReducer.js","reducers/loginReducer.js","reducers/userReducer.js","components/AddBlogForm.js","reducers/messageReducer.js","components/LoginForm.js","components/Home.js","services/users.js","reducers/usersReducer.js","components/UsersView.js","components/Notification.js","components/SingleUserView.js","components/Blog.js","components/LoggedinMessage.js","App.js","store.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","Button","onClick","id","buttonLabel","children","displayName","baseUrl","token","create","newObject","a","config","headers","Authorization","console","log","axios","post","response","data","addComment","comment","commObj","getAll","get","then","setToken","newToken","remove","delete","update","put","login","credentials","initializeBlogs","dispatch","blogService","blogs","type","blogsReducer","state","action","blogToChange","find","b","changedBlog","likes","map","blog","initialState","username","password","setCredentials","loginReducer","setUser","user","userReducer","AddBlogForm","createBlog","title","setTitle","author","setAuthor","url","setUrl","onSubmit","event","preventDefault","Form","Group","Label","Control","value","name","onChange","target","variant","setMessage","message","messageReducer","LoginForm","handleLogin","useDispatch","Home","useEffect","useSelector","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","addBlog","blogObject","newBlog","blogFormRef","useRef","sortedByLikes","sort","Table","striped","key","to","initializeUsers","userService","users","UsersView","length","Notification","className","SingleUserView","useParams","userToDisplay","u","String","Blog","setComment","href","updateBlog","comments","c","index","confirm","deleteBlog","background","LoggedinMessage","size","clear","App","padding","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","as","Item","path","reducer","combineReducers","usersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e83d1cb.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility} id=\"toggalbeShowButton\">{props.buttonLabel }</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button onClick={toggleVisibility} id=\"toggalbeCancelButton\">cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\n\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  console.log('token: ', token)\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst addComment = async (comment, id) => {\n\n  const commObj = { 'comment': comment }\n\n  const response = await axios.post(`${baseUrl}/${id}/comments`, commObj, )\n  return response.data\n}\n\nconst remove = (id) => {\n\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst update = async (newObject, id) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nexport default { getAll, create, setToken, remove, update, addComment }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import blogService from '../services/blogs'\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data\n    case 'NEW_BLOG':\n      return [...state, action.data]\n    case 'UPDATE_BLOG': {\n      const id = action.data.id\n      const blogToChange = state.find(b => b.id === id)\n      const changedBlog = {\n        ...blogToChange,\n        likes: blogToChange.likes + 1\n      }\n      return state.map(blog =>\n        blog.id !== id ? blog : changedBlog\n      )\n    }\n    case 'DELETE_BLOG':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport const createBlog = newObject => {\n  return async dispatch => {\n    const newBlog = await blogService.create(newObject)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    await blogService.remove(id)\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: blogs\n    })\n  }\n}\n\nexport const updateBlog = (newObject, id) => {\n  return async dispatch => {\n    const blog = await blogService.update(newObject, id)\n    dispatch({\n      type: 'UPDATE_BLOG',\n      data: blog\n    })\n  }\n}\n\nexport default blogsReducer","const initialState = {\n    username: '',\n    password: ''\n}\n\nconst loginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_CREDENTIALS':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setCredentials = (username, password) => {\n    return {\n        type: 'SET_CREDENTIALS',\n        data: {\n            username: username,\n            password: password\n        }\n    }\n}\n\nexport default loginReducer","const userReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.user\n        default:\n            return state\n    }\n}\n\nexport const setUser = user => {\n    return {\n        type: 'SET_USER',\n        user,\n    }\n}\n\nexport default userReducer","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddBlogForm = ({ createBlog }) => {\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url\n    }\n\n    createBlog(blogObject)\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n\n    <div>\n      <h2>Create a new blog</h2>\n\n      <form onSubmit={addBlog}>\n        <Form.Group>\n          <Form.Label>title:</Form.Label>\n          <Form.Control\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n          <Form.Label>author:</Form.Label>\n          <Form.Control\n            id=\"author\"\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n          <Form.Label>url:</Form.Label>\n          <Form.Control\n            id=\"url\"\n            type=\"text\"\n            value={url}\n            name=\"Password\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n          <Button variant=\"primary\" type=\"submit\" id=\"submitNewBlog\">\n            submit\n          </Button>\n        </Form.Group>\n      </form>\n    </div>\n  )\n}\n\nexport default AddBlogForm","const messageReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_MESSAGE':\n            return action.message\n        case 'REMOVE_MESAGE':\n            return action.message\n        default:\n            return state\n    }\n}\n\nexport const removeMessage = () => {\n    return {\n        type: 'REMOVE_MESAGE',\n        message: null\n    }\n}\n\nexport const setMessage = message => {\n    return {\n        type: 'SET_MESSAGE',\n        message,\n    }\n}\n\nexport default messageReducer","import React from 'react'\nimport { setCredentials } from '../reducers/loginReducer'\nimport { useDispatch } from 'react-redux'\n\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = ({ handleLogin, username, password }) => {\n\n  const dispatch = useDispatch()\n\n  return (\n    <form onSubmit={handleLogin}>\n      <Form.Group>\n        <Form.Label>username:</Form.Label>\n        <Form.Control\n          id=\"username-form\"\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => dispatch(setCredentials(target.value, password))}\n        />\n        <Form.Label>password:</Form.Label>\n        <Form.Control\n          id=\"password-form\"\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => dispatch(setCredentials(username, target.value))}\n        />\n        <Button variant=\"primary\" type=\"submit\" id=\"loginButton\">\n          login\n        </Button>\n      </Form.Group>\n\n    </form>\n  )\n}\n\nexport default LoginForm","import React, { useEffect, useRef } from 'react'\nimport Togglable from './Togglable'\nimport blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeBlogs, createBlog } from '../reducers/blogsReducer'\nimport { setCredentials } from '../reducers/loginReducer'\nimport { setUser } from '../reducers/userReducer'\nimport AddBlogForm from './AddBlogForm'\nimport { setMessage, removeMessage } from '../reducers/messageReducer'\nimport LoginForm from './LoginForm'\n\nimport { Table, Form, Button } from 'react-bootstrap'\n\nimport {\n  Link\n} from 'react-router-dom'\n\nconst Home = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const blogs = useSelector(state => state.blogs)\n  const credentials = useSelector(state => state.credentials)\n  const user = useSelector(state => state.user)\n\n  //checking local storage for logged in user info\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n    }\n  }, [dispatch])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const username = credentials.username\n      const password = credentials.password\n\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      console.log('user: ', user)\n      console.log('token :', user.token)\n\n      dispatch(setUser(user))\n      dispatch(setCredentials('', ''))\n\n      dispatch(setMessage('Logged in successfuly'))\n      setTimeout(() => {\n        dispatch(removeMessage())\n      }, 5000)\n    } catch (exception) {\n      console.log('wrong credentials')\n      dispatch(setMessage('Wrong credentials'))\n      setTimeout(() => {\n        dispatch(removeMessage())\n      }, 5000)\n    }\n  }\n\n  /*const logOut = () => {\n      window.localStorage.clear()\n      dispatch(setUser(null))\n      dispatch(setMessage('Logged out successfuly'))\n      setTimeout(() => {\n          dispatch(removeMessage())\n      }, 5000)\n  }*/\n\n  //deal with message\n  const addBlog = (blogObject) => {\n    dispatch(createBlog(blogObject))\n    dispatch(setMessage('Successfuly created a new blog'))\n    setTimeout(() => {\n      dispatch(removeMessage())\n    }, 5000)\n  }\n\n  const blogFormRef = useRef()\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\n      <AddBlogForm\n        createBlog={addBlog}\n      />\n    </Togglable>\n  )\n\n\n\n  const sortedByLikes = blogs.sort((a, b) => (a.likes > b.likes) ? -1 : 1)\n\n  return (\n    <div>\n      {user === null ?\n        <LoginForm\n          handleLogin={handleLogin}\n          username={credentials.username}\n          password={credentials.password}\n        /> :\n        <div>\n          <h2>Blogs</h2>\n          {blogForm()}\n          <Table striped>\n            <tbody>\n              {sortedByLikes.map(blog =>\n                <tr key={blog.id}>\n                  <td>\n                    <Link to={`/blogs/${blog.id}`}>\n                      {blog.title}\n                    </Link>\n                  </td>\n                  <td>\n                    {blog.likes} likes\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      }\n    </div>\n\n\n  )\n\n\n}\n\nexport default Home","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nexport default { getAll }","import userService from '../services/users'\n\n\nconst messageReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data\n      case 'SET_USERS':\n        return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users\n    })\n  }\n}\n\nexport const setUsers = (users) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_USERS',\n      data: users\n    })\n  }\n}\n\nexport default messageReducer","import React, { useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport blogService from '../services/blogs'\nimport { setUser } from '../reducers/userReducer'\nimport { initializeUsers } from '../reducers/usersReducer'\n\nimport { Link } from 'react-router-dom'\n\nimport { Table, Form, Button } from 'react-bootstrap'\n\nconst UsersView = () => {\n\n  const dispatch = useDispatch()\n\n  const user = useSelector(state => state.user)\n  const users = useSelector(state => state.users)\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  // !!! THIS IS REPEATED, NOT GOOD\n  //checking local storage for logged in user info\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n    }\n    console.log('test')\n  }, [dispatch])\n\n  // !!! this might be needed\n  /*useEffect(() => {\n    userService\n      .getAll()\n      .then(data => {\n        setUsers(data)\n      })\n  }, [])*/\n\n  return (\n    <div>\n      {user === null ?\n        <div>pelase log in to see user information</div> :\n        <div>\n          <h2>Users</h2>\n          <Table striped>\n            <thead>\n              <tr>\n                <th>user name</th>\n                <th>blogs created</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map(user =>\n                <tr key={user.id}>\n                  <td>\n                    <Link to={`/users/${user.id}`}>\n                      {user.name}\n                    </Link>\n                  </td>\n                  <td>{user.blogs.length}</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n\n\n        </div>\n      }\n\n    </div>\n  )\n}\n\nexport default UsersView","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n  const message = useSelector(state => state.message)\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useEffect } from 'react'\n\nimport { useParams } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser } from '../reducers/userReducer'\nimport blogService from '../services/blogs'\nimport { initializeUsers } from '../reducers/usersReducer'\n\n\nconst SingleUserView = () => {\n\n  const dispatch = useDispatch()\n\n  const user = useSelector(state => state.user)\n  const users = useSelector(state => state.users)\n\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n    }\n  }, [dispatch])\n\n  const id = useParams().id\n\n  /*console.log('id: ', id)\n  console.log('type of id: ', typeof(Number(id)))\n  console.log('users: ', users)\n  console.log('ids: ', users.map(u => u.id))*/\n\n  const userToDisplay = users.find(u => String(u.id) === String(id))\n  //console.log('u to isplay: ', userToDisplay)\n\n  return (\n    <div>\n      {user === null ?\n        <div>pelase log in to see user information</div> :\n        <div>\n          {userToDisplay ?\n            <div>\n              <h2>{userToDisplay.name}</h2>\n              <h3>added blogs</h3>\n              <ul>\n                {userToDisplay.blogs.map(b =>\n                  <li key={b.id}>{b.title}</li>\n                )}\n              </ul>\n            </div> :\n            <h3>No user with such id exists int he database</h3>\n\n\n          }\n\n        </div>\n      }\n\n    </div>\n  )\n\n\n}\n\nexport default SingleUserView\n\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initializeBlogs, updateBlog, deleteBlog } from '../reducers/blogsReducer'\r\nimport { useParams } from 'react-router-dom'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport blogService from '../services/blogs'\r\nimport { setMessage, removeMessage } from '../reducers/messageReducer'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst Blog = () => {\r\n\r\n  const [comment, setComment] = useState('')\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n  }, [dispatch])\r\n\r\n\r\n  //const [visible, setVisible] = useState(false)\r\n  const blogs = useSelector(state => state.blogs)\r\n  const id = useParams().id\r\n  const blog = blogs.find(b => String(b.id) === String(id))\r\n  const user = useSelector(state => state.user)\r\n\r\n  //console.log('blogs: ', blogs)\r\n  //console.log('blog: ', blog)\r\n\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(setUser(user))\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [dispatch])\r\n\r\n  const incrementLikes = () => {\r\n\r\n    const blogObject = {\r\n      user: blog.user.id,\r\n      likes: blog.likes + 1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url\r\n    }\r\n\r\n    console.log('blog object: ', blogObject)\r\n\r\n    dispatch(updateBlog(blogObject, blog.id))\r\n  }\r\n\r\n  const removeBlog = () => {\r\n\r\n    const prompt = window.confirm(`Delete the blog ${blog.title}?`)\r\n\r\n    if (prompt) {\r\n      dispatch(deleteBlog(blog.id))\r\n      dispatch(setMessage('Successfuly removed the blog'))\r\n      setTimeout(() => {\r\n        dispatch(removeMessage())\r\n      }, 5000)\r\n    }\r\n\r\n  }\r\n\r\n  const addComment = () => {\r\n    blogService.addComment(comment, blog.id)\r\n    dispatch(initializeBlogs())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user === null ?\r\n        <div>pelase log in to see user information</div> :\r\n        <div>\r\n          {blog ?\r\n            <div>\r\n              <h1 id=\"singleBlogTitle\">{blog.title}</h1>\r\n              <Table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      url: <a href={blog.url}>\r\n                        {blog.url}\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td> {blog.likes} likes <Button onClick={incrementLikes}>like</Button><br /></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      added by {blog.author}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n              <form onSubmit={addComment}>\r\n                <Form.Group>\r\n                  <h4>comment</h4>\r\n                  <Form.Control\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    value={comment}\r\n                    name=\"Title\"\r\n                    onChange={({ target }) => setComment(target.value)}\r\n                  />\r\n                  <Button variant=\"primary\" type=\"submit\" id=\"addCommentButton\">\r\n                    Add comment\r\n                  </Button>\r\n                </Form.Group>\r\n              </form>\r\n              <h3>comments:</h3>\r\n              <ul>\r\n                {blog.comments.map((c, index) => <li key={index} >{c}</li>)}\r\n              </ul>\r\n              {((blog.user && user) && ((blog.user.id === user.id) || (blog.user === user.id))) ? <Button onClick={removeBlog} style={{ background: 'red' }}>delete</Button> : null}\r\n            </div> :\r\n            <h3>No post with such id exists int he database</h3>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Blog\r\n","import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser } from '../reducers/userReducer'\nimport { setMessage, removeMessage } from '../reducers/messageReducer'\nimport { Button } from 'react-bootstrap'\n\n\nconst LoggedinMessage = () => {\n  const dispatch = useDispatch()\n\n  const user = useSelector(state => state.user)\n\n\n  const logOut = () => {\n    window.localStorage.clear()\n    dispatch(setUser(null))\n    dispatch(setMessage('Logged out successfuly'))\n    setTimeout(() => {\n      dispatch(removeMessage())\n    }, 5000)\n  }\n\n  return (\n    <div className=\"menuItem\" id=\"loggedInText\">{user.name} logged-in <Button variant=\"outline-primary\" size=\"sm\" onClick={logOut} id=\"logOutButton\">log out</Button></div>\n  )\n\n}\n\nexport default LoggedinMessage","import React, { useEffect } from 'react'\nimport Home from './components/Home'\nimport UsersView from './components/UsersView'\nimport Notification from './components/Notification'\nimport SingleUserView from './components/SingleUserView'\nimport Blog from './components/Blog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser } from './reducers/userReducer'\nimport blogService from './services/blogs'\nimport { Navbar, Nav } from 'react-bootstrap'\n\n\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from 'react-router-dom'\nimport LoggedinMessage from './components/LoggedinMessage'\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n\n\n  const user = useSelector(state => state.user)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n    }\n  }, [dispatch])\n\n  const padding = {\n    padding: 5\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link style={padding} to=\"/\">home</Link>\n              </Nav.Link>\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link style={padding} to=\"/users\">users</Link>\n              </Nav.Link>\n              <Nav.Item id='loggedInIndicator'>\n                {user === null ?\n                  null :\n                  <LoggedinMessage />\n                }\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Notification />\n        <Switch>\n          <Route path='/users/:id'>\n            <SingleUserView />\n          </Route>\n          <Route path='/users'>\n            <UsersView />\n          </Route>\n          <Route path='/blogs/:id'>\n            <Blog />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport blogsReducer from './reducers/blogsReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/userReducer'\nimport messageReducer from './reducers/messageReducer'\nimport usersReducer from './reducers/usersReducer'\n\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  credentials: loginReducer,\n  user: userReducer,\n  message: messageReducer,\n  users: usersReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider >,\n  document.getElementById('root')\n)"],"sourceRoot":""}